{"ast":null,"code":"const strangerThingsAPI_URL = 'https://strangers-things.herokuapp.com/api/2204-FTB-MT-WEB-PT';\nexport const apiCall = async function (url) {\n  let method = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'GET';\n  let token = arguments.length > 2 ? arguments[2] : undefined;\n  let body = arguments.length > 3 ? arguments[3] : undefined;\n  let data = false;\n\n  try {\n    const response = await fetch(strangerThingsAPI_URL + url, setToken(getFetchOptions(method, body), token));\n    data = await response.json();\n\n    if (data.error) {\n      throw data.error;\n    }\n  } catch (e) {\n    console.error(e);\n  }\n\n  return data;\n};\n\nconst getFetchOptions = (method, body) => {\n  return {\n    method: method.toUpperCase(),\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(body)\n  };\n};\n\nconst setToken = (body, token) => {\n  return token ? Object.assign(body, {\n    'Authorization': `Bearer ${token}`\n  }) : body;\n};\n\n{\n  /* i dont know what the fuck im doing it just felt nice to type something after not for an hour*/\n}\nexport const fetchPosts = async () => {\n  const data = await apiCall('/posts');\n\n  if (!data || !data.data) {\n    return [];\n  }\n\n  return data.data.posts || [];\n};","map":{"version":3,"names":["strangerThingsAPI_URL","apiCall","url","method","token","body","data","response","fetch","setToken","getFetchOptions","json","error","e","console","toUpperCase","headers","JSON","stringify","Object","assign","fetchPosts","posts"],"sources":["/home/vaultdweller7/Desktop/course-work/strangers-things/src/utility/api.js"],"sourcesContent":["const strangerThingsAPI_URL = 'https://strangers-things.herokuapp.com/api/2204-FTB-MT-WEB-PT'\n\nexport const apiCall = async (url, method='GET', token, body) => {\n\n    let data = false;\n    try {\n      const response = await fetch(\n        strangerThingsAPI_URL + url, \n        setToken(getFetchOptions(method, body), token)\n      );\n      data = await response.json();\n  \n      if (data.error) {\n        throw data.error;\n      }\n    } catch(e) {\n      console.error(e);\n    }\n  \n    return data;\n  }\n  \n  \n  const getFetchOptions = (method, body) => {\n    return {\n      method: method.toUpperCase(),\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(body)\n    }\n  }\n  \n  const setToken = (body, token) => {\n    return token ? \n      Object.assign(body, {'Authorization': `Bearer ${token}` }) :\n      body;\n  }\n{/* i dont know what the fuck im doing it just felt nice to type something after not for an hour*/}\n\nexport const fetchPosts = async () => {\n  const data = await apiCall('/posts')\n  if (!data || !data.data) {\n    return []\n  }\n  return data.data.posts || [];\n}"],"mappings":"AAAA,MAAMA,qBAAqB,GAAG,+DAA9B;AAEA,OAAO,MAAMC,OAAO,GAAG,gBAAOC,GAAP,EAA0C;EAAA,IAA9BC,MAA8B,uEAAvB,KAAuB;EAAA,IAAhBC,KAAgB;EAAA,IAATC,IAAS;EAE7D,IAAIC,IAAI,GAAG,KAAX;;EACA,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1BR,qBAAqB,GAAGE,GADE,EAE1BO,QAAQ,CAACC,eAAe,CAACP,MAAD,EAASE,IAAT,CAAhB,EAAgCD,KAAhC,CAFkB,CAA5B;IAIAE,IAAI,GAAG,MAAMC,QAAQ,CAACI,IAAT,EAAb;;IAEA,IAAIL,IAAI,CAACM,KAAT,EAAgB;MACd,MAAMN,IAAI,CAACM,KAAX;IACD;EACF,CAVD,CAUE,OAAMC,CAAN,EAAS;IACTC,OAAO,CAACF,KAAR,CAAcC,CAAd;EACD;;EAED,OAAOP,IAAP;AACD,CAlBI;;AAqBL,MAAMI,eAAe,GAAG,CAACP,MAAD,EAASE,IAAT,KAAkB;EACxC,OAAO;IACLF,MAAM,EAAEA,MAAM,CAACY,WAAP,EADH;IAELC,OAAO,EAAE;MACP,gBAAgB;IADT,CAFJ;IAKLX,IAAI,EAAEY,IAAI,CAACC,SAAL,CAAeb,IAAf;EALD,CAAP;AAOD,CARD;;AAUA,MAAMI,QAAQ,GAAG,CAACJ,IAAD,EAAOD,KAAP,KAAiB;EAChC,OAAOA,KAAK,GACVe,MAAM,CAACC,MAAP,CAAcf,IAAd,EAAoB;IAAC,iBAAkB,UAASD,KAAM;EAAlC,CAApB,CADU,GAEVC,IAFF;AAGD,CAJD;;AAKF;EAAC;AAAkG;AAEnG,OAAO,MAAMgB,UAAU,GAAG,YAAY;EACpC,MAAMf,IAAI,GAAG,MAAML,OAAO,CAAC,QAAD,CAA1B;;EACA,IAAI,CAACK,IAAD,IAAS,CAACA,IAAI,CAACA,IAAnB,EAAyB;IACvB,OAAO,EAAP;EACD;;EACD,OAAOA,IAAI,CAACA,IAAL,CAAUgB,KAAV,IAAmB,EAA1B;AACD,CANM"},"metadata":{},"sourceType":"module"}